{"version":3,"sources":["app/scripts/pointer-events.js","app/components/Header.js","0","app/components/Card-data.js","app/components/Card.js","app/components/Cards.js","app/components/Footer.js","app/components/App.js","app/app.js"],"names":["camera","document","getElementById","currentGesture","eventsCache","prevDiff","nodeState","documentElement","addEventListener","event","push","setPointerCapture","pointerId","x","scale","translate","brightness","i","length","startX","prevX","dx","style","transform","curDiff","Math","abs","clientX","size","innerText","window","header","visibleNav","update","module","exports","events","type","title","source","time","description","icon","data","values","electricity","water","gas","temperature","humidity","albumcover","artist","track","name","volume","buttons","image","dataTemplates","music","thermal","graph","btn","index","trackImg","graphImg","map","join","cameraImg","descriptionTemplate","dataTemplate","card","cardEvents","Card","root","innerHTML"],"mappings":"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","file":"app.c0e72708.map","sourceRoot":"..","sourcesContent":["export default () => {\n    let camera = document.getElementById('camera');\n    let currentGesture = null;\n    let eventsCache = [];\n    let prevDiff = -1;\n\n    const nodeState = {\n        scale: 1,\n        translate: 0,\n        brightness: 100,\n    };\n\n    if ('ontouchstart' in document.documentElement) {\n        camera.addEventListener('pointerdown', (event) => {\n            eventsCache.push(event);\n\n            camera.setPointerCapture(event.pointerId);\n\n            currentGesture = {\n                startX: event.x,\n                prevX: event.x,\n                scale: nodeState.scale,\n                translate: nodeState.translate,\n                brightness: nodeState.brightness,\n            };\n        });\n\n        camera.addEventListener('pointermove', (event) => {\n            if (!currentGesture) {\n                return;\n            }\n\n            for (let i = 0; i < eventsCache.length; i++) {\n                if (event.pointerId === eventsCache[i].pointerId) {\n                    eventsCache[i] = event;\n                    break;\n                }\n            }\n\n            if (eventsCache.length === 1) {\n                const {startX, prevX, scale, translate, brightness} = currentGesture;\n                const {x} = event;\n                const dx = x - startX;\n\n                camera.style.transform = `translate(${translate + dx}px)`;\n\n                currentGesture.prevX = x;\n                nodeState.translate = dx < -1.5 * nodeState.translate ? -2 * nodeState.translate : 0;\n            }\n\n            if (eventsCache.length === 2) {\n                let curDiff = Math.abs(eventsCache[0].clientX - eventsCache[1].clientX);\n                let size = document.getElementById('camera__oncoming');\n\n                if (prevDiff > 0) {\n                    if (curDiff > prevDiff) {\n                        size.innerText = `${curDiff}`;\n                        camera.style.transform = `scale(${1 + curDiff * 0.01})`;\n                    }\n                    if (curDiff < prevDiff) {\n                        size.innerText = `${curDiff}`;\n                        camera.style.transform = `scale(${1 - curDiff * 0.01})`;\n                    }\n                }\n\n                prevDiff = curDiff;\n            }\n        });\n\n        camera.addEventListener('pointerup', (event) => {\n            eventsCache = [];\n            if (eventsCache.length < 2) prevDiff = -1;\n        });\n    }\n}\n","window.header = {\n    visibleNav: false,\n\n    displayNav: () => {\n        window.header.visibleNav = !window.header.visibleNav;\n        window.update();\n    }\n};\n\nexport default () => {\n    return `<div class=\"header\">\n                <h3 class=\"header__logo\"></h3>\n                <div class=\"header__menu\" onclick=\"header.displayNav()\"></div>\n                <nav class=\"header__nav ${header.visibleNav ? 'header__nav_visible' : ''}\">\n                    <a class=\"header__nav-item header__nav-item_selected\" href=\"#\" target=\"_self\" onclick=\"header.displayNav()\">Сводка</a>\n                    <a class=\"header__nav-item\" href=\"#\" target=\"_self\" onclick=\"header.displayNav()\">Устройства</a>\n                    <a class=\"header__nav-item\" href=\"#\" target=\"_self\" onclick=\"header.displayNav()\">Сценарии</a>\n                </nav>\n            </div>`\n}\n",null,"import trackImg from '../assets/album-cover.png';\nimport cameraImg from '../assets/camera.png';\nimport graphImg from '../assets/graph.png';\n\nexport default (events) => {\n    if (events.icon === 'music') {\n        return dataTemplates.music(events.data);\n    } else if (events.icon === 'thermal') {\n        return dataTemplates.thermal(events.data);\n    } else if (events.data.type === 'graph') {\n        return dataTemplates.graph();\n    } else if (events.data.buttons) {\n        let btn = function (btn, index) {\n            return `<div class=\"button button__${index}\">${btn}</div>`\n        };\n        return dataTemplates.buttons(events.data, btn);\n    } else if (events.data.image) {\n        return dataTemplates.camera();\n    }\n}\n\nlet dataTemplates = {\n    music: (data) => {\n        return `<div class=\"track__container\">\n                    <div class=\"track__info\">\n                        <img class=\"track_image\" src=\"${trackImg}\">\n                        <div class=\"track__panel\">\n                            <div class=\"track\">\n                                <span class=\"track__artist\">${data.artist}</span>\n                                <span> - </span>\n                                <span class=\"track__name\">${data.track.name}</span>\n                            </div>\n                            <div class=\"track__controls\">\n                                <input type=\"range\" class=\"track__length-control\">\n                                <span class=\"track__controls-text\">${data.track.length}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"track__controls\">\n                        <div class=\"track__previous\"></div>\n                        <div class=\"track__next\"></div>\n                        <input type=\"range\" class=\"track__volume-control\">\n                        <span class=\"track__controls-text\">${data.volume}%</span>\n                    </div>\n                </div>`\n    },\n\n    thermal: (data) => {\n        return `<div class=\"thermal__container\">\n                    <div class=\"thermal__temperature\">\n                        <span class=\"thermal__title\">Температура: </span>\n                        <span class=\"thermal__value\">${data.temperature} С</span>\n                    </div>\n                    <div class=\"thermal__humidity\">\n                        <span class=\"thermal__title\">Влажность: </span>\n                        <span class=\"thermal__value\">${data.humidity}%</span>\n                    </div>\n                </div>`;\n    },\n\n    graph: () => {\n        return `<img class=\"graph__image image\" src=\"${graphImg}\">`;\n    },\n\n    buttons: (data, btn) => {\n        return `<div class=\"buttons__container\">\n                    ${data.buttons.map(btn).join('')}\n                </div>`;\n    },\n\n    camera: () => {\n        return `<div class=\"camera__container\" touch-action=\"none\">\n                    <img id=\"camera\" class=\"camera__image image\" src=\"${cameraImg}\">\n                </div>\n                <div class=\"camera__controls\">\n                    <div>Приближение: <span id=\"camera__oncoming\">100</span>%</div>\n                    <div>Яркость: <span id=\"camera__bright\">100</span>%</div>\n                </div>`;\n    }\n};\n","import cardData from './Card-data'\n\nexport default (card) => {\n    return `<div class=\"card card_size_${card.size} card_type_${card.type === 'critical' ? 'critical' : 'info'}\">\n                <div class=\"card__content card__main-content\">\n                    <div class=\"card__title-group\">\n                        <div class=\"card__icon-container\">\n                            <span class=\"card__icon card__icon-${card.icon}\"></span>\n                        </div>\n                        <div class=\"card__title\">${card.title}</div>\n                    </div>\n                    <div class=\"card__info\">\n                        <div class=\"card__source\">${card.source}</div>\n                        <div class=\"card__time\">${card.time}</div>\n                    </div>\n                </div>\n                ${card.description || card.data ?\n                    ('<div class=\"card__content card__additional-content\">'\n                        + descriptionTemplate(card.description) \n                        + dataTemplate(card) \n                    + '</div>'): ''}\n                <div class=\"button__close\"></div>\n                <div class=\"button__next\"></div>\n            </div>`\n}\n\nfunction descriptionTemplate(description) {\n    if (description) {\n        return `<div class=\"card__description\">${description}</div>`;\n    }\n\n    return ''\n}\n\nfunction dataTemplate(card) {\n    if (card.data) {\n        return `<div class=\"card__data\">${cardData(card)}</div>`\n    }\n\n    return ''\n}\n","import cardEvents from '../../mock/events';\n\nimport Card from \"./Card\";\n\nexport default () => {\n    return `<div class=\"cards\">\n                <div class=\"cards__title\">Лента событий </div>\n                <div class=\"cards__container\">\n                    ${cardEvents.events.map(Card).join('')}\n                </div>\n            </div>`\n}\n","export default () => {\n    return `<div class=\"footer\">\n                <div class=\"footer__nav\">\n                    <a class=\"footer__nav-item\" href=\"#\" target=\"_self\">Помощь</a>\n                    <a class=\"footer__nav-item\" href=\"#\" target=\"_self\">Обратная связь</a>\n                    <a class=\"footer__nav-item\" href=\"#\" target=\"_self\">Разработчикам</a>\n                    <a class=\"footer__nav-item\" href=\"#\" target=\"_self\">Условия использования</a>\n                    <a class=\"footer__nav-item\" href=\"https://docviewer.yandex.ru/view/1130000031416131/?*=tyRHkLnnH5CEuwvTqHisSEf1HNR7InVybCI6InlhLXdpa2k6Ly93aWtpLWFwaS55YW5kZXgucnUvc2hyaS0yMDE4LWlpL2hvbWV3b3JrL2FkYXB0aXZuYWphLXZqb3JzdGthL2xpY2Vuc2UucGRmIiwidGl0bGUiOiJsaWNlbnNlLnBkZiIsInVpZCI6IjExMzAwMDAwMzE0MTYxMzEiLCJ5dSI6IjQ3NjMxNTI1NjE1MTE1NTQxMDYiLCJub2lmcmFtZSI6ZmFsc2UsInRzIjoxNTM4ODk0MjU0NTcyfQ%3D%3D\" target=\"_blank\" rel=\"nofollow noopener\">Авторские права</a>\n                </div>\n                <div class=\"footer__logo\">© 2001–2017  ООО «Яндекс»</div>\n            </div>`\n}\n","import Header from \"./Header\";\nimport Cards from \"./Cards\";\nimport Footer from \"./Footer\";\n\nexport default () => {\n    return `${Header()}\n            ${Cards()}\n            ${Footer()}`;\n}\n","import pointerEvents from './scripts/pointer-events';\nimport App from \"./components/App\";\nimport './styles/main.less';\n\nlet root = document.getElementById('root');\n\nwindow.update = () => {\n    root.innerHTML = App();\n};\n\nwindow.update();\n\npointerEvents();\n"]}